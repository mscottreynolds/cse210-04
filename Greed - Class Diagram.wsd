@startuml

class Color {
    _r: Red
    _g: Green
    _b: Blue
}

class Point {
    _x: x position on the screen.
    _y: y position on the screen.
}

class Actor {
    _text: Displayable text representation.
    _font_size: Size of this actor.
    _color: Color of the actor.
    _position: Current position of actor on the screen.
    _velocity: How fast the actor is moving.

    move_actor(dx, dy): Move the actor in the specified directions.
}

class Artifact {
    _value: Number of points for this Artifact, 1 for gem, -1 for rock.

    is_intercept(Point): Returns true if the specified point was intercepted by the most recent movement.
}

Actor <|-- Artifact 

class Player {
    _score: Players score.
}

Actor <|-- Artifact

class Cast {
    add_actor(self, group, actor): Adds an actor to the given group.
    get_actors(self, group): Gets the actors in the given group.
    get_all_actors(self): Gets all of the actors in the cast.
    get_first_actor(self, group): Gets the first actor in the given group.
    remove_actor(self, group, actor): Removes an actor from the given group.
}

class TerminalServices

class VideoServices

class Director {
    _cast: Collection of all actors.
    _keyboard: Keyboard services.
    _video: Video services.

    start_game(): Starts the game.
    _draw_screen(): Draws the current state of the screen.
    _get_input(): Gets input from the player, players movement or key presses.
    _do_updates(): Update the positions of the actors
}

@enduml
